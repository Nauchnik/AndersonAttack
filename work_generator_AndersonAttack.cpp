#include <iostream>
#include <string>
#include <vector>

/*
Work generator for a BOINC project aimed at solving cryptanalysis problems for A5/1 via еру Anderson approach.
Format of WUs: 
keystream(uint64) index_from(uint64) index_to(uint64),
where keystream is a known 64-bit keystream, 
index_from - first index of a interavl
index_to - last one, [index_from, index),
*/

const unsigned long long KEYS_PER_SECOND = (unsigned long long)1.4e10;
const unsigned long long SECONDS_PER_WU = 120;

int main( int argc, char *argv[])
{
	// Known keystreams - each of them corresponds to a cryptanalysis instance for A5/1.
	std::vector<std::string> known_keystream_vec{
	"100011110110011011001001011000010000100000100000001100001110111001011010111111000001001100011010011101010010111100",
	"101101111001011101100100001100000110101000001001101010010111010101010110110000000101001000100010001100101000011011",
	"001001000100000111110011011011111110110101011100110100101011101110000010010101010100110110101001111011011110010001",
	"100110111111101011101101011111101001101101000010101100111100100111110010000101101110001000011001011011011000010101",
	"010010101000100001001000000110010011110001000010011110100100100100000001100111101110010111000000111011111001111010",
	"111000011101111011101100011101101011110100100110001011001101110010101101001111000000100010101011100001110100001100",
	"111011100110100010111011100001001000100101001011111001101100000010100100001111110110110110001010100011110110100110",
	"101110010010010000000011111111101101000011000100100100101101011001111100110100010011001000100111110010011111101010",
	"001100101000101101001010111001101010101011100010000110100110001101111100101001010010011110111111111000100100111011",
	"001101110100111000000110010010111100000111111110110111011110000001010111010100001100111011010011010100100010011110" };
	unsigned long long subproblems_total_number = (unsigned long long)pow(2,53);
	unsigned long long subproblems_per_wu = KEYS_PER_SECOND * SECONDS_PER_WU;
	unsigned long long wu_total_number = (unsigned long long)ceil((double)subproblems_total_number / (double)subproblems_per_wu);
	
	return 0;
}